{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "dXtLqS4EcAbL"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "%matplotlib inline\n",
        "import seaborn as sns"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_csv('/content/abalone.csv')"
      ],
      "metadata": {
        "id": "L5UNdxejcVy2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "0cr6sRYfdE5p",
        "outputId": "f2dbcb9f-e294-4279-ca89-69c1bc05712e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Sex  Length  Diameter  Height  Whole weight  Shucked weight  Viscera weight  \\\n",
              "0   M   0.455     0.365   0.095        0.5140          0.2245          0.1010   \n",
              "1   M   0.350     0.265   0.090        0.2255          0.0995          0.0485   \n",
              "2   F   0.530     0.420   0.135        0.6770          0.2565          0.1415   \n",
              "3   M   0.440     0.365   0.125        0.5160          0.2155          0.1140   \n",
              "4   I   0.330     0.255   0.080        0.2050          0.0895          0.0395   \n",
              "\n",
              "   Shell weight  Rings  \n",
              "0         0.150     15  \n",
              "1         0.070      7  \n",
              "2         0.210      9  \n",
              "3         0.155     10  \n",
              "4         0.055      7  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5676d2b2-4a1f-4672-9a75-5db99b5e3759\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sex</th>\n",
              "      <th>Length</th>\n",
              "      <th>Diameter</th>\n",
              "      <th>Height</th>\n",
              "      <th>Whole weight</th>\n",
              "      <th>Shucked weight</th>\n",
              "      <th>Viscera weight</th>\n",
              "      <th>Shell weight</th>\n",
              "      <th>Rings</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>M</td>\n",
              "      <td>0.455</td>\n",
              "      <td>0.365</td>\n",
              "      <td>0.095</td>\n",
              "      <td>0.5140</td>\n",
              "      <td>0.2245</td>\n",
              "      <td>0.1010</td>\n",
              "      <td>0.150</td>\n",
              "      <td>15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>M</td>\n",
              "      <td>0.350</td>\n",
              "      <td>0.265</td>\n",
              "      <td>0.090</td>\n",
              "      <td>0.2255</td>\n",
              "      <td>0.0995</td>\n",
              "      <td>0.0485</td>\n",
              "      <td>0.070</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>F</td>\n",
              "      <td>0.530</td>\n",
              "      <td>0.420</td>\n",
              "      <td>0.135</td>\n",
              "      <td>0.6770</td>\n",
              "      <td>0.2565</td>\n",
              "      <td>0.1415</td>\n",
              "      <td>0.210</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>M</td>\n",
              "      <td>0.440</td>\n",
              "      <td>0.365</td>\n",
              "      <td>0.125</td>\n",
              "      <td>0.5160</td>\n",
              "      <td>0.2155</td>\n",
              "      <td>0.1140</td>\n",
              "      <td>0.155</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>I</td>\n",
              "      <td>0.330</td>\n",
              "      <td>0.255</td>\n",
              "      <td>0.080</td>\n",
              "      <td>0.2050</td>\n",
              "      <td>0.0895</td>\n",
              "      <td>0.0395</td>\n",
              "      <td>0.055</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5676d2b2-4a1f-4672-9a75-5db99b5e3759')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-5676d2b2-4a1f-4672-9a75-5db99b5e3759 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-5676d2b2-4a1f-4672-9a75-5db99b5e3759');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 378
        },
        "id": "1YVVpFuCdZtM",
        "outputId": "9425adfb-de19-4284-d0d9-087bdc67581a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Length     Diameter       Height  Whole weight  Shucked weight  \\\n",
              "count  4177.000000  4177.000000  4177.000000   4177.000000     4177.000000   \n",
              "mean      0.523992     0.407881     0.139516      0.828742        0.359367   \n",
              "std       0.120093     0.099240     0.041827      0.490389        0.221963   \n",
              "min       0.075000     0.055000     0.000000      0.002000        0.001000   \n",
              "25%       0.450000     0.350000     0.115000      0.441500        0.186000   \n",
              "50%       0.545000     0.425000     0.140000      0.799500        0.336000   \n",
              "75%       0.615000     0.480000     0.165000      1.153000        0.502000   \n",
              "max       0.815000     0.650000     1.130000      2.825500        1.488000   \n",
              "\n",
              "       Viscera weight  Shell weight        Rings  \n",
              "count     4177.000000   4177.000000  4177.000000  \n",
              "mean         0.180594      0.238831     9.933684  \n",
              "std          0.109614      0.139203     3.224169  \n",
              "min          0.000500      0.001500     1.000000  \n",
              "25%          0.093500      0.130000     8.000000  \n",
              "50%          0.171000      0.234000     9.000000  \n",
              "75%          0.253000      0.329000    11.000000  \n",
              "max          0.760000      1.005000    29.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-697e7d9b-86c1-41e1-843d-c461463bf73f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Length</th>\n",
              "      <th>Diameter</th>\n",
              "      <th>Height</th>\n",
              "      <th>Whole weight</th>\n",
              "      <th>Shucked weight</th>\n",
              "      <th>Viscera weight</th>\n",
              "      <th>Shell weight</th>\n",
              "      <th>Rings</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>4177.000000</td>\n",
              "      <td>4177.000000</td>\n",
              "      <td>4177.000000</td>\n",
              "      <td>4177.000000</td>\n",
              "      <td>4177.000000</td>\n",
              "      <td>4177.000000</td>\n",
              "      <td>4177.000000</td>\n",
              "      <td>4177.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>0.523992</td>\n",
              "      <td>0.407881</td>\n",
              "      <td>0.139516</td>\n",
              "      <td>0.828742</td>\n",
              "      <td>0.359367</td>\n",
              "      <td>0.180594</td>\n",
              "      <td>0.238831</td>\n",
              "      <td>9.933684</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>0.120093</td>\n",
              "      <td>0.099240</td>\n",
              "      <td>0.041827</td>\n",
              "      <td>0.490389</td>\n",
              "      <td>0.221963</td>\n",
              "      <td>0.109614</td>\n",
              "      <td>0.139203</td>\n",
              "      <td>3.224169</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.075000</td>\n",
              "      <td>0.055000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.002000</td>\n",
              "      <td>0.001000</td>\n",
              "      <td>0.000500</td>\n",
              "      <td>0.001500</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>0.450000</td>\n",
              "      <td>0.350000</td>\n",
              "      <td>0.115000</td>\n",
              "      <td>0.441500</td>\n",
              "      <td>0.186000</td>\n",
              "      <td>0.093500</td>\n",
              "      <td>0.130000</td>\n",
              "      <td>8.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>0.545000</td>\n",
              "      <td>0.425000</td>\n",
              "      <td>0.140000</td>\n",
              "      <td>0.799500</td>\n",
              "      <td>0.336000</td>\n",
              "      <td>0.171000</td>\n",
              "      <td>0.234000</td>\n",
              "      <td>9.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>0.615000</td>\n",
              "      <td>0.480000</td>\n",
              "      <td>0.165000</td>\n",
              "      <td>1.153000</td>\n",
              "      <td>0.502000</td>\n",
              "      <td>0.253000</td>\n",
              "      <td>0.329000</td>\n",
              "      <td>11.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>0.815000</td>\n",
              "      <td>0.650000</td>\n",
              "      <td>1.130000</td>\n",
              "      <td>2.825500</td>\n",
              "      <td>1.488000</td>\n",
              "      <td>0.760000</td>\n",
              "      <td>1.005000</td>\n",
              "      <td>29.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-697e7d9b-86c1-41e1-843d-c461463bf73f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-697e7d9b-86c1-41e1-843d-c461463bf73f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-697e7d9b-86c1-41e1-843d-c461463bf73f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.heatmap(df.isnull())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 357
        },
        "id": "KZa6ovEMhBK9",
        "outputId": "97f14d14-4c5b-4681-b4fc-fe33f3426707"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fa3ee4ee190>"
            ]
          },
          "metadata": {},
          "execution_count": 11
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9BKrrpiwhTGh",
        "outputId": "9100df8e-dcdb-4f96-eb41-ced73d24934d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 4177 entries, 0 to 4176\n",
            "Data columns (total 9 columns):\n",
            " #   Column          Non-Null Count  Dtype  \n",
            "---  ------          --------------  -----  \n",
            " 0   Sex             4177 non-null   object \n",
            " 1   Length          4177 non-null   float64\n",
            " 2   Diameter        4177 non-null   float64\n",
            " 3   Height          4177 non-null   float64\n",
            " 4   Whole weight    4177 non-null   float64\n",
            " 5   Shucked weight  4177 non-null   float64\n",
            " 6   Viscera weight  4177 non-null   float64\n",
            " 7   Shell weight    4177 non-null   float64\n",
            " 8   age             4177 non-null   float64\n",
            "dtypes: float64(8), object(1)\n",
            "memory usage: 293.8+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "numerical_features"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tbFR6F1uhos6",
        "outputId": "74a7bf36-0b6d-4eff-c7c3-daca54c073f7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['Length', 'Diameter', 'Height', 'Whole weight', 'Shucked weight',\n",
              "       'Viscera weight', 'Shell weight', 'age'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "categorical_features"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uCMLzjYZhpuP",
        "outputId": "8abe06dd-009f-4f05-d481-b1c4bdf26534"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['Sex'], dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize = (20,7))\n",
        "sns.heatmap(df[numerical_features].corr(),annot = True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 273
        },
        "id": "nszrk254hqf_",
        "outputId": "8e155f02-95e3-4635-89e5-030bc97a00fa"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fa3e99e01d0>"
            ]
          },
          "metadata": {},
          "execution_count": 17
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1440x504 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.countplot(x = 'Sex', data = df, palette = 'Set3')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "pWa4vtwjhrOU",
        "outputId": "c04b3872-ef60-4b43-9ea8-a69fd6815c97"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fa3e7f84190>"
            ]
          },
          "metadata": {},
          "execution_count": 18
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize = (20,7))\n",
        "sns.swarmplot(x = 'Sex', y = 'age', data = df, hue = 'Sex')\n",
        "sns.violinplot(x = 'Sex', y = 'age',data = df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 526
        },
        "id": "b-ObXBI-iIKg",
        "outputId": "8fe59b7b-f299-4bac-cd96-dd974399fd17"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:1296: UserWarning: 56.2% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
            "  warnings.warn(msg, UserWarning)\n",
            "/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:1296: UserWarning: 52.2% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
            "  warnings.warn(msg, UserWarning)\n",
            "/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:1296: UserWarning: 58.5% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
            "  warnings.warn(msg, UserWarning)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fa3e7ecba10>"
            ]
          },
          "metadata": {},
          "execution_count": 19
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1440x504 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.get_dummies(df)\n",
        "dummy_df = df"
      ],
      "metadata": {
        "id": "3OCsLjMHiJjl"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#viscera weight\n",
        "var = 'Viscera weight'\n",
        "plt.scatter(x = df[var], y = df['age'])\n",
        "plt.grid(True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "hs8p0yz4iKlb",
        "outputId": "b954213d-2e47-45e8-83bd-239244f9f400"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#shell weight\n",
        "var = 'Shell weight'\n",
        "plt.scatter(x = df[var], y = df['age'])\n",
        "plt.grid(True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "irlqVSlliMXz",
        "outputId": "9dc60ef8-59f4-4cd0-8e61-2815bab57cb9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#shucked weight\n",
        "var = 'Shucked weight'\n",
        "plt.scatter(x = df[var], y = df['age'])\n",
        "plt.grid(True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "VTpLbew2i-Xp",
        "outputId": "057b22f1-5277-450e-a98c-babf96cd291c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#whole weight\n",
        "var = 'Whole weight'\n",
        "plt.scatter(x = df[var], y = df['age'])\n",
        "plt.grid(True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "GuI7-gkWjSEa",
        "outputId": "6de1dc4b-6b1a-4911-c088-8b0595a56670"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#diameter\n",
        "var = 'Diameter'\n",
        "plt.scatter(x = df[var], y = df['age'])\n",
        "plt.grid(True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "-GrtrEvKjTD-",
        "outputId": "328a0295-7828-48aa-ba82-83eefb4514a1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#height\n",
        "var = 'Height'\n",
        "plt.scatter(x = df[var], y = df['age'])\n",
        "plt.grid(True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "Dx94FdlnjUHT",
        "outputId": "a13907da-11cf-4bd9-cc32-6941f66791a1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#length\n",
        "var = 'Length'\n",
        "plt.scatter(x = df[var], y = df['age'])\n",
        "plt.grid(True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "LvRk-vpSjVE7",
        "outputId": "a8e2b79c-0b38-4ac1-d1ad-6ae56c2e8983"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#independent scale"
      ],
      "metadata": {
        "id": "OK5zfBakoTTe"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x=df.iloc[:, 0:1]\n",
        "x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "id": "7ncrABTGyS8P",
        "outputId": "04515d76-10f8-46b2-a1a4-bd9a5c037b63"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Length\n",
              "0      0.455\n",
              "1      0.350\n",
              "2      0.530\n",
              "3      0.440\n",
              "4      0.330\n",
              "...      ...\n",
              "4172   0.565\n",
              "4173   0.590\n",
              "4174   0.600\n",
              "4175   0.625\n",
              "4176   0.710\n",
              "\n",
              "[4177 rows x 1 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8f085153-eeb4-4d9f-9da1-bb412874966e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Length</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.455</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.350</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.530</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.440</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.330</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4172</th>\n",
              "      <td>0.565</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4173</th>\n",
              "      <td>0.590</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4174</th>\n",
              "      <td>0.600</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4175</th>\n",
              "      <td>0.625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4176</th>\n",
              "      <td>0.710</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>4177 rows × 1 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8f085153-eeb4-4d9f-9da1-bb412874966e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8f085153-eeb4-4d9f-9da1-bb412874966e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8f085153-eeb4-4d9f-9da1-bb412874966e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#dependent variable"
      ],
      "metadata": {
        "id": "_6mi9ONby6QR"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "y=df.iloc[:,1:]\n",
        "y"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 480
        },
        "id": "WDHTk-SVy7vG",
        "outputId": "a77b14cd-d95a-41dd-8a84-4ffb49709b3d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Diameter  Height  Whole weight  Shucked weight  Viscera weight  \\\n",
              "0        0.365   0.095        0.5140          0.2245          0.1010   \n",
              "1        0.265   0.090        0.2255          0.0995          0.0485   \n",
              "2        0.420   0.135        0.6770          0.2565          0.1415   \n",
              "3        0.365   0.125        0.5160          0.2155          0.1140   \n",
              "4        0.255   0.080        0.2050          0.0895          0.0395   \n",
              "...        ...     ...           ...             ...             ...   \n",
              "4172     0.450   0.165        0.8870          0.3700          0.2390   \n",
              "4173     0.440   0.135        0.9660          0.4390          0.2145   \n",
              "4174     0.475   0.205        1.1760          0.5255          0.2875   \n",
              "4175     0.485   0.150        1.0945          0.5310          0.2610   \n",
              "4176     0.555   0.195        1.9485          0.9455          0.3765   \n",
              "\n",
              "      Shell weight   age  Sex_F  Sex_I  Sex_M  \n",
              "0           0.1500  16.5      0      0      1  \n",
              "1           0.0700   8.5      0      0      1  \n",
              "2           0.2100  10.5      1      0      0  \n",
              "3           0.1550  11.5      0      0      1  \n",
              "4           0.0550   8.5      0      1      0  \n",
              "...            ...   ...    ...    ...    ...  \n",
              "4172        0.2490  12.5      1      0      0  \n",
              "4173        0.2605  11.5      0      0      1  \n",
              "4174        0.3080  10.5      0      0      1  \n",
              "4175        0.2960  11.5      1      0      0  \n",
              "4176        0.4950  13.5      0      0      1  \n",
              "\n",
              "[4177 rows x 10 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-93eee615-2f91-4969-b3af-7ece4bb2eee5\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Diameter</th>\n",
              "      <th>Height</th>\n",
              "      <th>Whole weight</th>\n",
              "      <th>Shucked weight</th>\n",
              "      <th>Viscera weight</th>\n",
              "      <th>Shell weight</th>\n",
              "      <th>age</th>\n",
              "      <th>Sex_F</th>\n",
              "      <th>Sex_I</th>\n",
              "      <th>Sex_M</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.365</td>\n",
              "      <td>0.095</td>\n",
              "      <td>0.5140</td>\n",
              "      <td>0.2245</td>\n",
              "      <td>0.1010</td>\n",
              "      <td>0.1500</td>\n",
              "      <td>16.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.265</td>\n",
              "      <td>0.090</td>\n",
              "      <td>0.2255</td>\n",
              "      <td>0.0995</td>\n",
              "      <td>0.0485</td>\n",
              "      <td>0.0700</td>\n",
              "      <td>8.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.420</td>\n",
              "      <td>0.135</td>\n",
              "      <td>0.6770</td>\n",
              "      <td>0.2565</td>\n",
              "      <td>0.1415</td>\n",
              "      <td>0.2100</td>\n",
              "      <td>10.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.365</td>\n",
              "      <td>0.125</td>\n",
              "      <td>0.5160</td>\n",
              "      <td>0.2155</td>\n",
              "      <td>0.1140</td>\n",
              "      <td>0.1550</td>\n",
              "      <td>11.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.255</td>\n",
              "      <td>0.080</td>\n",
              "      <td>0.2050</td>\n",
              "      <td>0.0895</td>\n",
              "      <td>0.0395</td>\n",
              "      <td>0.0550</td>\n",
              "      <td>8.5</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4172</th>\n",
              "      <td>0.450</td>\n",
              "      <td>0.165</td>\n",
              "      <td>0.8870</td>\n",
              "      <td>0.3700</td>\n",
              "      <td>0.2390</td>\n",
              "      <td>0.2490</td>\n",
              "      <td>12.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4173</th>\n",
              "      <td>0.440</td>\n",
              "      <td>0.135</td>\n",
              "      <td>0.9660</td>\n",
              "      <td>0.4390</td>\n",
              "      <td>0.2145</td>\n",
              "      <td>0.2605</td>\n",
              "      <td>11.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4174</th>\n",
              "      <td>0.475</td>\n",
              "      <td>0.205</td>\n",
              "      <td>1.1760</td>\n",
              "      <td>0.5255</td>\n",
              "      <td>0.2875</td>\n",
              "      <td>0.3080</td>\n",
              "      <td>10.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4175</th>\n",
              "      <td>0.485</td>\n",
              "      <td>0.150</td>\n",
              "      <td>1.0945</td>\n",
              "      <td>0.5310</td>\n",
              "      <td>0.2610</td>\n",
              "      <td>0.2960</td>\n",
              "      <td>11.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4176</th>\n",
              "      <td>0.555</td>\n",
              "      <td>0.195</td>\n",
              "      <td>1.9485</td>\n",
              "      <td>0.9455</td>\n",
              "      <td>0.3765</td>\n",
              "      <td>0.4950</td>\n",
              "      <td>13.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>4177 rows × 10 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-93eee615-2f91-4969-b3af-7ece4bb2eee5')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-93eee615-2f91-4969-b3af-7ece4bb2eee5 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-93eee615-2f91-4969-b3af-7ece4bb2eee5');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Train the Model, Test the Model, split\n",
        "from sklearn.model_selection import train_test_split\n",
        "x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)"
      ],
      "metadata": {
        "id": "AOhgbJxczg61"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x_train.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1qHy3BNvzh9e",
        "outputId": "2af19903-7ff3-4006-9147-c229385b2e4a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(3341, 1)"
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x_test.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1pVSu1y8zjTA",
        "outputId": "2fc154ff-fbe8-4e7a-c160-b818fbe7d68e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(836, 1)"
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x_test"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "id": "JvVSUe57238s",
        "outputId": "06b6e178-026f-48fd-a851-51cc36a3f1f2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Length\n",
              "668    0.550\n",
              "1580   0.500\n",
              "3784   0.620\n",
              "463    0.220\n",
              "2615   0.645\n",
              "...      ...\n",
              "575    0.610\n",
              "3231   0.410\n",
              "1084   0.445\n",
              "290    0.540\n",
              "2713   0.250\n",
              "\n",
              "[836 rows x 1 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-969d33cb-609b-4ba4-bd26-ef704107793a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Length</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>668</th>\n",
              "      <td>0.550</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1580</th>\n",
              "      <td>0.500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3784</th>\n",
              "      <td>0.620</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>463</th>\n",
              "      <td>0.220</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2615</th>\n",
              "      <td>0.645</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>575</th>\n",
              "      <td>0.610</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3231</th>\n",
              "      <td>0.410</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1084</th>\n",
              "      <td>0.445</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>290</th>\n",
              "      <td>0.540</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2713</th>\n",
              "      <td>0.250</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>836 rows × 1 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-969d33cb-609b-4ba4-bd26-ef704107793a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-969d33cb-609b-4ba4-bd26-ef704107793a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-969d33cb-609b-4ba4-bd26-ef704107793a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_train.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KyqYRWsu3eB-",
        "outputId": "335fd90b-5e6e-4ed3-e05b-95e2f54bbad5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(3341, 10)"
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_test.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oNnaewBh3k7S",
        "outputId": "823c84b4-3840-4e72-d391-5f1a2669846b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(836, 10)"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "model of building"
      ],
      "metadata": {
        "id": "RUzsymLe38Pj"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Build the Model\n",
        "from sklearn.linear_model import linearRegression\n",
        "slr=LinearRegression()\n",
        "slr.fit(x_train,y_train)"
      ],
      "metadata": {
        "id": "oacLmviJ4sNh"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x_test"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "S_ySlyRK7Xis",
        "outputId": "415aefa5-e8f7-46a6-aeea-baf85f01554e"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Length\n",
              "668    0.550\n",
              "1580   0.500\n",
              "3784   0.620\n",
              "463    0.220\n",
              "2615   0.645\n",
              "...      ...\n",
              "575    0.610\n",
              "3231   0.410\n",
              "1084   0.445\n",
              "290    0.540\n",
              "2713   0.250\n",
              "\n",
              "[836 rows x 1 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-56451e57-06db-4877-81fa-e9f131cd3ddc\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Length</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>668</th>\n",
              "      <td>0.550</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1580</th>\n",
              "      <td>0.500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3784</th>\n",
              "      <td>0.620</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>463</th>\n",
              "      <td>0.220</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2615</th>\n",
              "      <td>0.645</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>575</th>\n",
              "      <td>0.610</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3231</th>\n",
              "      <td>0.410</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1084</th>\n",
              "      <td>0.445</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>290</th>\n",
              "      <td>0.540</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2713</th>\n",
              "      <td>0.250</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>836 rows × 1 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-56451e57-06db-4877-81fa-e9f131cd3ddc')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-56451e57-06db-4877-81fa-e9f131cd3ddc button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-56451e57-06db-4877-81fa-e9f131cd3ddc');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_test"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "tWm4Hewc7YAC",
        "outputId": "ed05b22b-d548-4fd1-8cf2-5c76b56cce9c"
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Diameter  Height  Whole weight  Shucked weight  Viscera weight  \\\n",
              "668      0.425   0.155        0.9175          0.2775          0.2430   \n",
              "1580     0.400   0.120        0.6160          0.2610          0.1430   \n",
              "3784     0.480   0.155        1.2555          0.5270          0.3740   \n",
              "463      0.165   0.055        0.0545          0.0215          0.0120   \n",
              "2615     0.500   0.175        1.5105          0.6735          0.3755   \n",
              "...        ...     ...           ...             ...             ...   \n",
              "575      0.475   0.140        1.1330          0.5275          0.2355   \n",
              "3231     0.325   0.120        0.3745          0.1580          0.0810   \n",
              "1084     0.345   0.105        0.4090          0.1675          0.1015   \n",
              "290      0.435   0.180        0.9960          0.3835          0.2260   \n",
              "2713     0.175   0.060        0.0635          0.0275          0.0080   \n",
              "\n",
              "      Shell weight   age  Sex_F  Sex_I  Sex_M  \n",
              "668         0.3350  14.5      0      0      1  \n",
              "1580        0.1935   9.5      0      1      0  \n",
              "3784        0.3175  12.5      0      0      1  \n",
              "463         0.0200   6.5      0      1      0  \n",
              "2615        0.3775  13.5      0      0      1  \n",
              "...            ...   ...    ...    ...    ...  \n",
              "575         0.3500  12.5      1      0      0  \n",
              "3231        0.1250  13.5      0      0      1  \n",
              "1084        0.1170   8.5      0      1      0  \n",
              "290         0.3250  18.5      0      0      1  \n",
              "2713        0.0200   5.5      0      1      0  \n",
              "\n",
              "[836 rows x 10 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b5196073-05ff-4a44-bdc8-125f33169610\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Diameter</th>\n",
              "      <th>Height</th>\n",
              "      <th>Whole weight</th>\n",
              "      <th>Shucked weight</th>\n",
              "      <th>Viscera weight</th>\n",
              "      <th>Shell weight</th>\n",
              "      <th>age</th>\n",
              "      <th>Sex_F</th>\n",
              "      <th>Sex_I</th>\n",
              "      <th>Sex_M</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>668</th>\n",
              "      <td>0.425</td>\n",
              "      <td>0.155</td>\n",
              "      <td>0.9175</td>\n",
              "      <td>0.2775</td>\n",
              "      <td>0.2430</td>\n",
              "      <td>0.3350</td>\n",
              "      <td>14.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1580</th>\n",
              "      <td>0.400</td>\n",
              "      <td>0.120</td>\n",
              "      <td>0.6160</td>\n",
              "      <td>0.2610</td>\n",
              "      <td>0.1430</td>\n",
              "      <td>0.1935</td>\n",
              "      <td>9.5</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3784</th>\n",
              "      <td>0.480</td>\n",
              "      <td>0.155</td>\n",
              "      <td>1.2555</td>\n",
              "      <td>0.5270</td>\n",
              "      <td>0.3740</td>\n",
              "      <td>0.3175</td>\n",
              "      <td>12.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>463</th>\n",
              "      <td>0.165</td>\n",
              "      <td>0.055</td>\n",
              "      <td>0.0545</td>\n",
              "      <td>0.0215</td>\n",
              "      <td>0.0120</td>\n",
              "      <td>0.0200</td>\n",
              "      <td>6.5</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2615</th>\n",
              "      <td>0.500</td>\n",
              "      <td>0.175</td>\n",
              "      <td>1.5105</td>\n",
              "      <td>0.6735</td>\n",
              "      <td>0.3755</td>\n",
              "      <td>0.3775</td>\n",
              "      <td>13.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>575</th>\n",
              "      <td>0.475</td>\n",
              "      <td>0.140</td>\n",
              "      <td>1.1330</td>\n",
              "      <td>0.5275</td>\n",
              "      <td>0.2355</td>\n",
              "      <td>0.3500</td>\n",
              "      <td>12.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3231</th>\n",
              "      <td>0.325</td>\n",
              "      <td>0.120</td>\n",
              "      <td>0.3745</td>\n",
              "      <td>0.1580</td>\n",
              "      <td>0.0810</td>\n",
              "      <td>0.1250</td>\n",
              "      <td>13.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1084</th>\n",
              "      <td>0.345</td>\n",
              "      <td>0.105</td>\n",
              "      <td>0.4090</td>\n",
              "      <td>0.1675</td>\n",
              "      <td>0.1015</td>\n",
              "      <td>0.1170</td>\n",
              "      <td>8.5</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>290</th>\n",
              "      <td>0.435</td>\n",
              "      <td>0.180</td>\n",
              "      <td>0.9960</td>\n",
              "      <td>0.3835</td>\n",
              "      <td>0.2260</td>\n",
              "      <td>0.3250</td>\n",
              "      <td>18.5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2713</th>\n",
              "      <td>0.175</td>\n",
              "      <td>0.060</td>\n",
              "      <td>0.0635</td>\n",
              "      <td>0.0275</td>\n",
              "      <td>0.0080</td>\n",
              "      <td>0.0200</td>\n",
              "      <td>5.5</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>836 rows × 10 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b5196073-05ff-4a44-bdc8-125f33169610')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b5196073-05ff-4a44-bdc8-125f33169610 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b5196073-05ff-4a44-bdc8-125f33169610');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#descriptive statistics\n",
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 382
        },
        "id": "-7FaXtwz7YS4",
        "outputId": "3d84cc57-8ea2-43b4-d7e5-a570472f4c02"
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Length     Diameter       Height  Whole weight  Shucked weight  \\\n",
              "count  4177.000000  4177.000000  4177.000000   4177.000000     4177.000000   \n",
              "mean      0.523992     0.407881     0.139516      0.828742        0.359367   \n",
              "std       0.120093     0.099240     0.041827      0.490389        0.221963   \n",
              "min       0.075000     0.055000     0.000000      0.002000        0.001000   \n",
              "25%       0.450000     0.350000     0.115000      0.441500        0.186000   \n",
              "50%       0.545000     0.425000     0.140000      0.799500        0.336000   \n",
              "75%       0.615000     0.480000     0.165000      1.153000        0.502000   \n",
              "max       0.815000     0.650000     1.130000      2.825500        1.488000   \n",
              "\n",
              "       Viscera weight  Shell weight          age        Sex_F        Sex_I  \\\n",
              "count     4177.000000   4177.000000  4177.000000  4177.000000  4177.000000   \n",
              "mean         0.180594      0.238831    11.433684     0.312904     0.321283   \n",
              "std          0.109614      0.139203     3.224169     0.463731     0.467025   \n",
              "min          0.000500      0.001500     2.500000     0.000000     0.000000   \n",
              "25%          0.093500      0.130000     9.500000     0.000000     0.000000   \n",
              "50%          0.171000      0.234000    10.500000     0.000000     0.000000   \n",
              "75%          0.253000      0.329000    12.500000     1.000000     1.000000   \n",
              "max          0.760000      1.005000    30.500000     1.000000     1.000000   \n",
              "\n",
              "             Sex_M  \n",
              "count  4177.000000  \n",
              "mean      0.365813  \n",
              "std       0.481715  \n",
              "min       0.000000  \n",
              "25%       0.000000  \n",
              "50%       0.000000  \n",
              "75%       1.000000  \n",
              "max       1.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-57d997ad-4129-4755-8bd1-52abbcd308a7\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Length</th>\n",
              "      <th>Diameter</th>\n",
              "      <th>Height</th>\n",
              "      <th>Whole weight</th>\n",
              "      <th>Shucked weight</th>\n",
              "      <th>Viscera weight</th>\n",
              "      <th>Shell weight</th>\n",
              "      <th>age</th>\n",
              "      <th>Sex_F</th>\n",
              "      <th>Sex_I</th>\n",
              "      <th>Sex_M</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>4177.000000</td>\n",
              "      <td>4177.000000</td>\n",
              "      <td>4177.000000</td>\n",
              "      <td>4177.000000</td>\n",
              "      <td>4177.000000</td>\n",
              "      <td>4177.000000</td>\n",
              "      <td>4177.000000</td>\n",
              "      <td>4177.000000</td>\n",
              "      <td>4177.000000</td>\n",
              "      <td>4177.000000</td>\n",
              "      <td>4177.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>0.523992</td>\n",
              "      <td>0.407881</td>\n",
              "      <td>0.139516</td>\n",
              "      <td>0.828742</td>\n",
              "      <td>0.359367</td>\n",
              "      <td>0.180594</td>\n",
              "      <td>0.238831</td>\n",
              "      <td>11.433684</td>\n",
              "      <td>0.312904</td>\n",
              "      <td>0.321283</td>\n",
              "      <td>0.365813</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>0.120093</td>\n",
              "      <td>0.099240</td>\n",
              "      <td>0.041827</td>\n",
              "      <td>0.490389</td>\n",
              "      <td>0.221963</td>\n",
              "      <td>0.109614</td>\n",
              "      <td>0.139203</td>\n",
              "      <td>3.224169</td>\n",
              "      <td>0.463731</td>\n",
              "      <td>0.467025</td>\n",
              "      <td>0.481715</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.075000</td>\n",
              "      <td>0.055000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.002000</td>\n",
              "      <td>0.001000</td>\n",
              "      <td>0.000500</td>\n",
              "      <td>0.001500</td>\n",
              "      <td>2.500000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>0.450000</td>\n",
              "      <td>0.350000</td>\n",
              "      <td>0.115000</td>\n",
              "      <td>0.441500</td>\n",
              "      <td>0.186000</td>\n",
              "      <td>0.093500</td>\n",
              "      <td>0.130000</td>\n",
              "      <td>9.500000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>0.545000</td>\n",
              "      <td>0.425000</td>\n",
              "      <td>0.140000</td>\n",
              "      <td>0.799500</td>\n",
              "      <td>0.336000</td>\n",
              "      <td>0.171000</td>\n",
              "      <td>0.234000</td>\n",
              "      <td>10.500000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>0.615000</td>\n",
              "      <td>0.480000</td>\n",
              "      <td>0.165000</td>\n",
              "      <td>1.153000</td>\n",
              "      <td>0.502000</td>\n",
              "      <td>0.253000</td>\n",
              "      <td>0.329000</td>\n",
              "      <td>12.500000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>0.815000</td>\n",
              "      <td>0.650000</td>\n",
              "      <td>1.130000</td>\n",
              "      <td>2.825500</td>\n",
              "      <td>1.488000</td>\n",
              "      <td>0.760000</td>\n",
              "      <td>1.005000</td>\n",
              "      <td>30.500000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-57d997ad-4129-4755-8bd1-52abbcd308a7')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-57d997ad-4129-4755-8bd1-52abbcd308a7 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-57d997ad-4129-4755-8bd1-52abbcd308a7');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#multple \n",
        "df=pd.read_csv('/content/abalone.csv')\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "Xf2GgJKS7Yib",
        "outputId": "644ef271-41c8-4388-e48b-83aff4f119f8"
      },
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Sex  Length  Diameter  Height  Whole weight  Shucked weight  Viscera weight  \\\n",
              "0   M   0.455     0.365   0.095        0.5140          0.2245          0.1010   \n",
              "1   M   0.350     0.265   0.090        0.2255          0.0995          0.0485   \n",
              "2   F   0.530     0.420   0.135        0.6770          0.2565          0.1415   \n",
              "3   M   0.440     0.365   0.125        0.5160          0.2155          0.1140   \n",
              "4   I   0.330     0.255   0.080        0.2050          0.0895          0.0395   \n",
              "\n",
              "   Shell weight  Rings  \n",
              "0         0.150     15  \n",
              "1         0.070      7  \n",
              "2         0.210      9  \n",
              "3         0.155     10  \n",
              "4         0.055      7  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-17af0b89-a7b6-4b8a-9efa-816073b1a751\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sex</th>\n",
              "      <th>Length</th>\n",
              "      <th>Diameter</th>\n",
              "      <th>Height</th>\n",
              "      <th>Whole weight</th>\n",
              "      <th>Shucked weight</th>\n",
              "      <th>Viscera weight</th>\n",
              "      <th>Shell weight</th>\n",
              "      <th>Rings</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>M</td>\n",
              "      <td>0.455</td>\n",
              "      <td>0.365</td>\n",
              "      <td>0.095</td>\n",
              "      <td>0.5140</td>\n",
              "      <td>0.2245</td>\n",
              "      <td>0.1010</td>\n",
              "      <td>0.150</td>\n",
              "      <td>15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>M</td>\n",
              "      <td>0.350</td>\n",
              "      <td>0.265</td>\n",
              "      <td>0.090</td>\n",
              "      <td>0.2255</td>\n",
              "      <td>0.0995</td>\n",
              "      <td>0.0485</td>\n",
              "      <td>0.070</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>F</td>\n",
              "      <td>0.530</td>\n",
              "      <td>0.420</td>\n",
              "      <td>0.135</td>\n",
              "      <td>0.6770</td>\n",
              "      <td>0.2565</td>\n",
              "      <td>0.1415</td>\n",
              "      <td>0.210</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>M</td>\n",
              "      <td>0.440</td>\n",
              "      <td>0.365</td>\n",
              "      <td>0.125</td>\n",
              "      <td>0.5160</td>\n",
              "      <td>0.2155</td>\n",
              "      <td>0.1140</td>\n",
              "      <td>0.155</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>I</td>\n",
              "      <td>0.330</td>\n",
              "      <td>0.255</td>\n",
              "      <td>0.080</td>\n",
              "      <td>0.2050</td>\n",
              "      <td>0.0895</td>\n",
              "      <td>0.0395</td>\n",
              "      <td>0.055</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-17af0b89-a7b6-4b8a-9efa-816073b1a751')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-17af0b89-a7b6-4b8a-9efa-816073b1a751 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-17af0b89-a7b6-4b8a-9efa-816073b1a751');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "VRf9d95L7Yzi",
        "outputId": "7eb116bb-95a6-49fb-e04a-fbe8622fba40"
      },
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Sex  Length  Diameter  Height  Whole weight  Shucked weight  \\\n",
              "4172   F   0.565     0.450   0.165        0.8870          0.3700   \n",
              "4173   M   0.590     0.440   0.135        0.9660          0.4390   \n",
              "4174   M   0.600     0.475   0.205        1.1760          0.5255   \n",
              "4175   F   0.625     0.485   0.150        1.0945          0.5310   \n",
              "4176   M   0.710     0.555   0.195        1.9485          0.9455   \n",
              "\n",
              "      Viscera weight  Shell weight  Rings  \n",
              "4172          0.2390        0.2490     11  \n",
              "4173          0.2145        0.2605     10  \n",
              "4174          0.2875        0.3080      9  \n",
              "4175          0.2610        0.2960     10  \n",
              "4176          0.3765        0.4950     12  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-20da3af2-6188-43f8-be71-7ff928755012\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sex</th>\n",
              "      <th>Length</th>\n",
              "      <th>Diameter</th>\n",
              "      <th>Height</th>\n",
              "      <th>Whole weight</th>\n",
              "      <th>Shucked weight</th>\n",
              "      <th>Viscera weight</th>\n",
              "      <th>Shell weight</th>\n",
              "      <th>Rings</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>4172</th>\n",
              "      <td>F</td>\n",
              "      <td>0.565</td>\n",
              "      <td>0.450</td>\n",
              "      <td>0.165</td>\n",
              "      <td>0.8870</td>\n",
              "      <td>0.3700</td>\n",
              "      <td>0.2390</td>\n",
              "      <td>0.2490</td>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4173</th>\n",
              "      <td>M</td>\n",
              "      <td>0.590</td>\n",
              "      <td>0.440</td>\n",
              "      <td>0.135</td>\n",
              "      <td>0.9660</td>\n",
              "      <td>0.4390</td>\n",
              "      <td>0.2145</td>\n",
              "      <td>0.2605</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4174</th>\n",
              "      <td>M</td>\n",
              "      <td>0.600</td>\n",
              "      <td>0.475</td>\n",
              "      <td>0.205</td>\n",
              "      <td>1.1760</td>\n",
              "      <td>0.5255</td>\n",
              "      <td>0.2875</td>\n",
              "      <td>0.3080</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4175</th>\n",
              "      <td>F</td>\n",
              "      <td>0.625</td>\n",
              "      <td>0.485</td>\n",
              "      <td>0.150</td>\n",
              "      <td>1.0945</td>\n",
              "      <td>0.5310</td>\n",
              "      <td>0.2610</td>\n",
              "      <td>0.2960</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4176</th>\n",
              "      <td>M</td>\n",
              "      <td>0.710</td>\n",
              "      <td>0.555</td>\n",
              "      <td>0.195</td>\n",
              "      <td>1.9485</td>\n",
              "      <td>0.9455</td>\n",
              "      <td>0.3765</td>\n",
              "      <td>0.4950</td>\n",
              "      <td>12</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-20da3af2-6188-43f8-be71-7ff928755012')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-20da3af2-6188-43f8-be71-7ff928755012 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-20da3af2-6188-43f8-be71-7ff928755012');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 53
        }
      ]
    }
  ]
}